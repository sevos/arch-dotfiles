#!/bin/bash

# Complete Dotfiles Sync Script
# Runs system sync (as root) followed by user sync (as regular user)
# Usage: ./sync [--quiet|--verbose|--debug]

set -e

DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set default verbosity if not already set
export DOTFILES_VERBOSITY="${DOTFILES_VERBOSITY:-normal}"

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --quiet|-q)
            export DOTFILES_VERBOSITY="quiet"
            shift
            ;;
        --verbose|-v)
            export DOTFILES_VERBOSITY="verbose"
            shift
            ;;
        --debug|-d)
            export DOTFILES_VERBOSITY="debug"
            shift
            ;;
        --help|-h)
            echo "Usage: $0 [--quiet|--verbose|--debug] [username]"
            echo "  --quiet   Minimal output, errors only"
            echo "  --verbose Show detailed command output"
            echo "  --debug   Show debug information"
            echo "  username  Target user (when running as root)"
            exit 0
            ;;
        -*)
            echo "Unknown option: $1" >&2
            echo "Use --help for usage information" >&2
            exit 1
            ;;
        *)
            # Assume it's a username argument
            break
            ;;
    esac
done

# Source the shared logging library
source "$DOTFILES_DIR/lib/logging.sh"

# Initialize logging with total steps
init_logging 2

# Get the original user (before any sudo operations)
if [[ -n "$SUDO_USER" ]]; then
    ORIGINAL_USER="$SUDO_USER"
elif [[ $EUID -ne 0 ]]; then
    ORIGINAL_USER="$USER"
else
    # Running as root, need to determine the target user
    if [[ -n "$1" ]]; then
        ORIGINAL_USER="$1"
    else
        die "Running as root without specifying target user. Usage: $0 [username]"
    fi
fi

section "Complete Dotfiles Sync"
[[ "$VERBOSITY_LEVEL" == "verbose" || "$VERBOSITY_LEVEL" == "debug" ]] && info "Target user: $(highlight "$ORIGINAL_USER")"
[[ "$VERBOSITY_LEVEL" == "verbose" || "$VERBOSITY_LEVEL" == "debug" ]] && info "Verbosity level: $(highlight "$DOTFILES_VERBOSITY")"

# Check sudo access early if we're not root
if [[ $EUID -ne 0 ]]; then
    [[ "$VERBOSITY_LEVEL" == "verbose" || "$VERBOSITY_LEVEL" == "debug" ]] && info "Checking sudo access..."
    if ! sudo -v; then
        die "Sudo access required for system operations"
    fi
    [[ "$VERBOSITY_LEVEL" == "verbose" || "$VERBOSITY_LEVEL" == "debug" ]] && success "Sudo access confirmed"
fi

debug "Changing to dotfiles directory: $DOTFILES_DIR"
cd "$DOTFILES_DIR"
debug "Current directory: $(pwd)"

# Run system sync
major_step "System Configuration Sync"
export DOTFILES_VERBOSITY  # Pass verbosity to child scripts

if ./sync-system.sh; then
    success "System configuration completed"
else
    die "System sync failed"
fi

# Run user sync as the original user
major_step "User Configuration Sync"
if [[ $EUID -eq 0 ]]; then
    # Running as root, switch to target user
    if sudo -u "$ORIGINAL_USER" -E ./sync-user.sh; then
        success "User configuration completed"
    else
        die "User sync failed"
    fi
else
    # Running as regular user
    if ./sync-user.sh; then
        success "User configuration completed"
    else
        die "User sync failed"
    fi
fi

final_summary "Dotfiles sync"