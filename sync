#!/bin/bash

# Complete Dotfiles Sync Script
# Runs system sync (as root) followed by user sync (as regular user)
# Usage: ./sync.sh

set -e

DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BOLD='\033[1m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
    exit 1
}

section() {
    echo -e "\n${BLUE}${BOLD}=== $1 ===${NC}"
}

# Get the original user (before any sudo operations)
if [[ -n "$SUDO_USER" ]]; then
    ORIGINAL_USER="$SUDO_USER"
elif [[ $EUID -ne 0 ]]; then
    ORIGINAL_USER="$USER"
else
    # Running as root, need to determine the target user
    if [[ -n "$1" ]]; then
        ORIGINAL_USER="$1"
    else
        error "Running as root without specifying target user. Usage: $0 [username]"
    fi
fi

section "Complete Dotfiles Sync"
log "Running system sync followed by user sync"
log "Target user: $ORIGINAL_USER"

cd "$DOTFILES_DIR"

# Run system sync
section "System Configuration Sync"
log "Running sync-system.sh..."
./sync-system.sh || error "System sync failed"

# Run user sync as the original user
section "User Configuration Sync"
log "Running sync-user.sh as $ORIGINAL_USER..."
if [[ $EUID -eq 0 ]]; then
    # Running as root, switch to target user
    sudo -u "$ORIGINAL_USER" ./sync-user.sh || error "User sync failed"
else
    # Running as regular user
    ./sync-user.sh || error "User sync failed"
fi

section "Complete Sync Finished"
log "${BOLD}${GREEN}All dotfiles have been successfully synced!${NC}"